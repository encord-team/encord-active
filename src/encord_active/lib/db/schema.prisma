datasource db {
  provider = "sqlite"
  url      = env("MY_DATABASE_URL")
}

generator db {
  provider             = "prisma-client-py"
  interface            = "sync"
  recursive_type_depth = 5
}

model Tag {
  id      Int       @id @default(autoincrement())
  name    String
  scope   String
  ItemTag ItemTag[]

  @@unique([name, scope])
}

model ItemTag {
  label_hash  String
  data_hash   String
  frame       Int
  object_hash String
  tag         Tag    @relation(fields: [tag_id], references: [id])
  tag_id      Int

  @@id([label_hash, data_hash, frame, object_hash, tag_id])
}

model DataUnit {
  id           Int      @id @default(autoincrement())
  data_hash    String
  data_title   String
  frame        Int
  data_uri     String?
  lr_data_hash String
  label_row    LabelRow @relation(fields: [lr_data_hash], references: [data_hash])

  @@unique([data_hash, frame])
}

model LabelRow {
  id             Int        @id @default(autoincrement())
  label_hash     String?    @unique
  data_hash      String     @unique
  data_title     String
  data_type      String
  created_at     String
  last_edited_at String
  data_units     DataUnit[]
  label_row_json String
}

model MetricMetadataAnnotationType {
  metric_metadata_id Int
  metric_metadata MetricMetadata @relation(fields: [metric_metadata_id], references: [id])
  annotation_type String
  @@unique([metric_metadata_id, annotation_type])
}

model MetricMetadata {
  id                Int        @id @default(autoincrement())
  title             String     @unique
  short_description String
  long_description  String
  metric_type       String
  data_type         String
  annotation_type   MetricMetadataAnnotationType[]
  embedding_type    String?
  doc_url           String
  stat_min_value    Float
  stat_max_value    Float
  stat_mean_value   Float
  stat_num_rows     Int
}

model MetricRow {
  id Int @id @default(autoincrement())
  metric_prefix       String
  identifier          String
  score               Float
  description         String?
  object_class        String?
  annotator           String?
  frame               Int
  url                 String?
  @@unique([metric_prefix, identifier, frame])
}

model EmbeddingRow {
  id            Int @id @default(autoincrement())
  metric_prefix String
  identifier    String
  embedding     Bytes // Pickle encoded float array
  description   String?
  object_class  String?
  frame         Int
  url           String?
  @@unique([metric_prefix, identifier])
}
