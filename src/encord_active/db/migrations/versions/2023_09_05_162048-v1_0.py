"""v1_0

Revision ID: 1
Revises: bcfdfc2f498a
Create Date: 2023-09-05 14:26:50.014633+01:00

"""
from typing import Callable, Dict

import sqlalchemy as sa
from alembic import op
from sqlmodel.sql.sqltypes import GUID, AutoString

from encord_active.db.util.char8 import Char8
from encord_active.db.util.pgvector import PGVector
from encord_active.db.util.strdict import StrDict

# revision identifiers, used by Alembic.
revision = "20230905162048"
down_revision = "bcfdfc2f498a"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # if postgresql: ensure extension exist.
    bind = op.get_bind()
    if bind.engine.name == "postgresql":
        for ext in ["vector", "hstore", "intarray"]:
            r = bind.execute(f"SELECT extname FROM pg_extension WHERE extname = '{ext}'").all()
            if len(r) == 0:
                op.execute(f"CREATE EXTENSION {ext}")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("name", AutoString(), nullable=False),
        sa.Column("description", AutoString(), nullable=False),
        sa.Column("ontology", sa.JSON(), nullable=False),
        sa.Column("remote", sa.Boolean(), nullable=False),
        sa.Column("custom_metrics", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("project_hash"),
    )
    op.create_table(
        "prediction",
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("external_project_hash", GUID(), nullable=True),
        sa.Column("name", AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_hash"], ["project.project_hash"], name="fk_prediction", onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("prediction_hash"),
    )
    op.create_index("uq_project_prediction", "prediction", ["project_hash", "prediction_hash"], unique=True)
    op.create_table(
        "project_collaborator",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("user_email", AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_hash"],
            ["project.project_hash"],
            name="fk_project_collaborator",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "user_id"),
    )
    op.create_table(
        "project_data",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("data_hash", GUID(), nullable=False),
        sa.Column("label_hash", GUID(), nullable=False),
        sa.Column("dataset_hash", GUID(), nullable=False),
        sa.Column("num_frames", sa.Integer(), nullable=False),
        sa.Column("frames_per_second", sa.REAL(), nullable=True),
        sa.Column("dataset_title", AutoString(), nullable=False),
        sa.Column("data_title", AutoString(), nullable=False),
        sa.Column("data_type", AutoString(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("last_edited_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("object_answers", sa.JSON(), nullable=False),
        sa.Column("classification_answers", sa.JSON(), nullable=False),
        sa.CheckConstraint("num_frames > 0", name="project_data_num_frames"),
        sa.ForeignKeyConstraint(
            ["project_hash"], ["project.project_hash"], name="fk_project_data", onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("project_hash", "data_hash"),
    )
    op.create_table(
        "project_embedding_index",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("data_index_dirty", sa.Boolean(), nullable=False),
        sa.Column("data_index_name", AutoString(), nullable=True),
        sa.Column("data_index_compiled", sa.LargeBinary(), nullable=True),
        sa.Column("annotation_index_dirty", sa.Boolean(), nullable=False),
        sa.Column("annotation_index_name", AutoString(), nullable=True),
        sa.Column("annotation_index_compiled", sa.LargeBinary(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_hash"],
            ["project.project_hash"],
            name="fk_project_embedding_index",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash"),
    )
    op.create_table(
        "project_embedding_reduction",
        sa.Column("reduction_hash", GUID(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("reduction_name", AutoString(), nullable=False),
        sa.Column("reduction_description", AutoString(), nullable=False),
        sa.Column("reduction_type", sa.Enum("UMAP", name="embeddingreductiontype"), nullable=False),
        sa.Column("reduction_bytes", sa.LargeBinary(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_hash"],
            ["project.project_hash"],
            name="fk_project_embedding_reduction",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("reduction_hash"),
    )
    op.create_index(
        "ix_project_embedding_reduction", "project_embedding_reduction", ["project_hash", "reduction_hash"], unique=True
    )
    op.create_table(
        "project_import",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("import_metadata", sa.JSON(), nullable=False),
        sa.Column("import_metadata_type", sa.Enum("COCO", name="importmetadatatype"), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_hash"], ["project.project_hash"], name="fk_project_import", onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("project_hash"),
    )
    op.create_table(
        "project_tags",
        sa.Column("tag_hash", GUID(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("name", AutoString(), nullable=False),
        sa.Column("description", AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_hash"], ["project.project_hash"], name="fk_project_tags", onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("tag_hash"),
    )
    op.create_table(
        "prediction_analytics",
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("feature_hash", Char8(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("annotation_type", sa.SMALLINT(), nullable=False),
        sa.Column("match_annotation_hash", Char8(), nullable=True),
        sa.Column("match_feature_hash", Char8(), nullable=True),
        sa.Column("match_duplicate_iou", sa.REAL(), nullable=False),
        sa.Column("iou", sa.REAL(), nullable=False),
        sa.Column("metric_width", sa.INTEGER(), nullable=True),
        sa.Column("metric_height", sa.INTEGER(), nullable=True),
        sa.Column("metric_area", sa.INTEGER(), nullable=True),
        sa.Column("metric_area_relative", sa.REAL(), nullable=True),
        sa.Column("metric_aspect_ratio", sa.REAL(), nullable=True),
        sa.Column("metric_brightness", sa.REAL(), nullable=True),
        sa.Column("metric_contrast", sa.REAL(), nullable=True),
        sa.Column("metric_sharpness", sa.REAL(), nullable=True),
        sa.Column("metric_red", sa.REAL(), nullable=True),
        sa.Column("metric_green", sa.REAL(), nullable=True),
        sa.Column("metric_blue", sa.REAL(), nullable=True),
        sa.Column("metric_random", sa.REAL(), nullable=True),
        sa.Column("metric_annotation_quality", sa.REAL(), nullable=True),
        sa.Column("metric_max_iou", sa.REAL(), nullable=True),
        sa.Column("metric_border_relative", sa.REAL(), nullable=True),
        sa.Column("metric_polygon_similarity", sa.REAL(), nullable=True),
        sa.Column("metric_missing_or_broken_track", sa.REAL(), nullable=True),
        sa.Column("metric_inconsistent_class", sa.REAL(), nullable=True),
        sa.Column("metric_shape_outlier", sa.REAL(), nullable=True),
        sa.Column("metric_confidence", sa.REAL(), nullable=True),
        sa.Column("metric_custom0", sa.REAL(), nullable=True),
        sa.Column("metric_custom1", sa.REAL(), nullable=True),
        sa.Column("metric_custom2", sa.REAL(), nullable=True),
        sa.Column("metric_custom3", sa.REAL(), nullable=True),
        sa.CheckConstraint("frame >= 0", name="prediction_analytics_frame"),
        sa.CheckConstraint("iou BETWEEN 0.0 AND 1.0", name="prediction_analytics_iou"),
        sa.CheckConstraint(
            "match_duplicate_iou BETWEEN 0.0 AND 1.0 OR match_duplicate_iou = -1.0",
            name="prediction_analytics_duplicate_iou",
        ),
        sa.CheckConstraint(
            "metric_annotation_quality BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_annotation_quality"
        ),
        sa.CheckConstraint("metric_area >= 0", name="prediction_analytics_mtc_area"),
        sa.CheckConstraint("metric_area_relative BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_area_relative"),
        sa.CheckConstraint("metric_aspect_ratio >= 0.0", name="prediction_analytics_mtc_aspect_ratio"),
        sa.CheckConstraint("metric_blue BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_blue"),
        sa.CheckConstraint(
            "metric_border_relative BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_border_relative"
        ),
        sa.CheckConstraint("metric_brightness BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_brightness"),
        sa.CheckConstraint("metric_confidence BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_confidence"),
        sa.CheckConstraint("metric_contrast BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_contrast"),
        sa.CheckConstraint("metric_green BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_green"),
        sa.CheckConstraint("metric_height >= 0", name="prediction_analytics_mtc_height"),
        sa.CheckConstraint(
            "metric_inconsistent_class BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_inconsistent_class"
        ),
        sa.CheckConstraint("metric_max_iou BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_max_iou"),
        sa.CheckConstraint(
            "metric_missing_or_broken_track BETWEEN 0.0 AND 1.0",
            name="prediction_analytics_mtc_missing_or_broken_track",
        ),
        sa.CheckConstraint(
            "metric_polygon_similarity BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_polygon_similarity"
        ),
        sa.CheckConstraint("metric_random BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_random"),
        sa.CheckConstraint("metric_red BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_red"),
        sa.CheckConstraint("metric_shape_outlier BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_shape_outlier"),
        sa.CheckConstraint("metric_sharpness BETWEEN 0.0 AND 1.0", name="prediction_analytics_mtc_sharpness"),
        sa.CheckConstraint("metric_width >= 0", name="prediction_analytics_mtc_width"),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "project_hash"],
            ["prediction.prediction_hash", "prediction.project_hash"],
            name="fk_prediction_analytics",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("prediction_hash", "du_hash", "frame", "annotation_hash"),
    )
    op.create_index(
        "ix_prediction_analytics_ph_fh_mtc_confidence",
        "prediction_analytics",
        ["prediction_hash", "feature_hash", "metric_confidence"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_annotation_quality",
        "prediction_analytics",
        ["project_hash", "metric_annotation_quality"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_area", "prediction_analytics", ["project_hash", "metric_area"], unique=False
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_area_relative",
        "prediction_analytics",
        ["project_hash", "metric_area_relative"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_aspect_ratio",
        "prediction_analytics",
        ["project_hash", "metric_aspect_ratio"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_blue", "prediction_analytics", ["project_hash", "metric_blue"], unique=False
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_border_relative",
        "prediction_analytics",
        ["project_hash", "metric_border_relative"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_brightness",
        "prediction_analytics",
        ["project_hash", "metric_brightness"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_confidence",
        "prediction_analytics",
        ["project_hash", "metric_confidence"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_contrast",
        "prediction_analytics",
        ["project_hash", "metric_contrast"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_green", "prediction_analytics", ["project_hash", "metric_green"], unique=False
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_height", "prediction_analytics", ["project_hash", "metric_height"], unique=False
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_inconsistent_class",
        "prediction_analytics",
        ["project_hash", "metric_inconsistent_class"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_max_iou",
        "prediction_analytics",
        ["project_hash", "metric_max_iou"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_missing_or_broken_track",
        "prediction_analytics",
        ["project_hash", "metric_missing_or_broken_track"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_polygon_similarity",
        "prediction_analytics",
        ["project_hash", "metric_polygon_similarity"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_random", "prediction_analytics", ["project_hash", "metric_random"], unique=False
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_red", "prediction_analytics", ["project_hash", "metric_red"], unique=False
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_shape_outlier",
        "prediction_analytics",
        ["project_hash", "metric_shape_outlier"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_sharpness",
        "prediction_analytics",
        ["project_hash", "metric_sharpness"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_ph_mtc_width", "prediction_analytics", ["project_hash", "metric_width"], unique=False
    )
    op.create_table(
        "prediction_data",
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("data_hash", GUID(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("label_hash", GUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("last_edited_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("object_answers", sa.JSON(), nullable=False),
        sa.Column("classification_answers", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "project_hash"],
            ["prediction.prediction_hash", "prediction.project_hash"],
            name="fk_prediction_data",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["project_hash", "data_hash"],
            ["project_data.project_hash", "project_data.data_hash"],
            name="fk_prediction_data_project",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("prediction_hash", "data_hash"),
    )
    op.create_table(
        "project_data_units",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("data_hash", GUID(), nullable=False),
        sa.Column("width", sa.Integer(), nullable=False),
        sa.Column("height", sa.Integer(), nullable=False),
        sa.Column("data_uri", AutoString(), nullable=True),
        sa.Column("data_uri_is_video", sa.Boolean(), nullable=False),
        sa.Column("data_title", AutoString(), nullable=False),
        sa.Column("data_type", AutoString(), nullable=False),
        sa.Column("objects", sa.JSON(), nullable=False),
        sa.Column("classifications", sa.JSON(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="project_data_units_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "data_hash"],
            ["project_data.project_hash", "project_data.data_hash"],
            name="fk_project_data_units",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame"),
    )
    op.create_table(
        "prediction_analytics_derived",
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("distance_metric", sa.SMALLINT(), nullable=False),
        sa.Column("distance_index", sa.SMALLINT(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("similarity", sa.REAL(), nullable=False),
        sa.Column("dep_du_hash", GUID(), nullable=False),
        sa.Column("dep_frame", sa.Integer(), nullable=False),
        sa.Column("dep_annotation_hash", Char8(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="prediction_derived_frame"),
        sa.CheckConstraint("similarity >= 0", name="prediction_derived_similarity"),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "du_hash", "frame", "annotation_hash"],
            [
                "prediction_analytics.prediction_hash",
                "prediction_analytics.du_hash",
                "prediction_analytics.frame",
                "prediction_analytics.annotation_hash",
            ],
            name="fk_prediction_analytics_derived",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "project_hash"],
            ["prediction.prediction_hash", "prediction.project_hash"],
            name="fk_prediction_analytics_derive_project",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "prediction_hash", "du_hash", "frame", "annotation_hash", "distance_metric", "distance_index"
        ),
    )
    op.create_table(
        "prediction_analytics_extra",
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("embedding_clip", PGVector(512), nullable=True),
        sa.Column("embedding_hu", PGVector(7), nullable=True),
        sa.Column("metric_metadata", StrDict(text_type=sa.Text()), nullable=True),
        sa.CheckConstraint("frame >= 0", name="prediction_analytics_frame"),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "du_hash", "frame", "annotation_hash"],
            [
                "prediction_analytics.prediction_hash",
                "prediction_analytics.du_hash",
                "prediction_analytics.frame",
                "prediction_analytics.annotation_hash",
            ],
            name="fk_prediction_analytics_extra",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "project_hash"],
            ["prediction.prediction_hash", "prediction.project_hash"],
            name="fk_prediction_analytics_extra_project",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("prediction_hash", "du_hash", "frame", "annotation_hash"),
    )
    op.create_table(
        "prediction_analytics_reduced",
        sa.Column("reduction_hash", GUID(), nullable=False),
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("x", sa.REAL(), nullable=False),
        sa.Column("y", sa.REAL(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="prediction_analytics_reduced_frame"),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "du_hash", "frame", "annotation_hash"],
            [
                "prediction_analytics.prediction_hash",
                "prediction_analytics.du_hash",
                "prediction_analytics.frame",
                "prediction_analytics.annotation_hash",
            ],
            name="fk_prediction_analytics_reduced_data",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "project_hash"],
            ["prediction.prediction_hash", "prediction.project_hash"],
            name="fk_prediction_analytics_reduced_project",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["reduction_hash", "project_hash"],
            ["project_embedding_reduction.reduction_hash", "project_embedding_reduction.project_hash"],
            name="fk_prediction_analytics_reduced",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("reduction_hash", "prediction_hash", "du_hash", "frame", "annotation_hash"),
    )
    op.create_index(
        "ix_prediction_analytics_reduced_x",
        "prediction_analytics_reduced",
        ["reduction_hash", "prediction_hash", "x", "y"],
        unique=False,
    )
    op.create_index(
        "ix_prediction_analytics_reduced_y",
        "prediction_analytics_reduced",
        ["reduction_hash", "prediction_hash", "y", "x"],
        unique=False,
    )
    op.create_table(
        "prediction_data_units",
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("data_hash", GUID(), nullable=False),
        sa.Column("objects", sa.JSON(), nullable=False),
        sa.Column("classifications", sa.JSON(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="prediction_data_units_frame"),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "data_hash"],
            ["prediction_data.prediction_hash", "prediction_data.data_hash"],
            name="fk_prediction_data_units",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "project_hash"],
            ["prediction.prediction_hash", "prediction.project_hash"],
            name="fk_prediction_data_units_project",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame"],
            ["project_data_units.project_hash", "project_data_units.du_hash", "project_data_units.frame"],
            name="fk_prediction_data_units_data",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("prediction_hash", "du_hash", "frame"),
    )
    op.create_table(
        "project_analytics_annotation",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("feature_hash", Char8(), nullable=False),
        sa.Column("annotation_type", sa.SMALLINT(), nullable=False),
        sa.Column("annotation_user_id", sa.Integer(), nullable=True),
        sa.Column("annotation_manual", sa.Boolean(), nullable=False),
        sa.Column("metric_width", sa.INTEGER(), nullable=True),
        sa.Column("metric_height", sa.INTEGER(), nullable=True),
        sa.Column("metric_area", sa.INTEGER(), nullable=True),
        sa.Column("metric_area_relative", sa.REAL(), nullable=True),
        sa.Column("metric_aspect_ratio", sa.REAL(), nullable=True),
        sa.Column("metric_brightness", sa.REAL(), nullable=True),
        sa.Column("metric_contrast", sa.REAL(), nullable=True),
        sa.Column("metric_sharpness", sa.REAL(), nullable=True),
        sa.Column("metric_red", sa.REAL(), nullable=True),
        sa.Column("metric_green", sa.REAL(), nullable=True),
        sa.Column("metric_blue", sa.REAL(), nullable=True),
        sa.Column("metric_random", sa.REAL(), nullable=True),
        sa.Column("metric_annotation_quality", sa.REAL(), nullable=True),
        sa.Column("metric_max_iou", sa.REAL(), nullable=True),
        sa.Column("metric_border_relative", sa.REAL(), nullable=True),
        sa.Column("metric_polygon_similarity", sa.REAL(), nullable=True),
        sa.Column("metric_missing_or_broken_track", sa.REAL(), nullable=True),
        sa.Column("metric_inconsistent_class", sa.REAL(), nullable=True),
        sa.Column("metric_shape_outlier", sa.REAL(), nullable=True),
        sa.Column("metric_confidence", sa.REAL(), nullable=True),
        sa.Column("metric_custom0", sa.REAL(), nullable=True),
        sa.Column("metric_custom1", sa.REAL(), nullable=True),
        sa.Column("metric_custom2", sa.REAL(), nullable=True),
        sa.Column("metric_custom3", sa.REAL(), nullable=True),
        sa.CheckConstraint("frame >= 0", name="project_analytics_annotation_frame"),
        sa.CheckConstraint(
            "metric_annotation_quality BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_annotation_quality"
        ),
        sa.CheckConstraint("metric_area >= 0", name="project_analytics_annotation_mtc_area"),
        sa.CheckConstraint(
            "metric_area_relative BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_area_relative"
        ),
        sa.CheckConstraint("metric_aspect_ratio >= 0.0", name="project_analytics_annotation_mtc_aspect_ratio"),
        sa.CheckConstraint("metric_blue BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_blue"),
        sa.CheckConstraint(
            "metric_border_relative BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_border_relative"
        ),
        sa.CheckConstraint("metric_brightness BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_brightness"),
        sa.CheckConstraint("metric_confidence BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_confidence"),
        sa.CheckConstraint("metric_contrast BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_contrast"),
        sa.CheckConstraint("metric_green BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_green"),
        sa.CheckConstraint("metric_height >= 0", name="project_analytics_annotation_mtc_height"),
        sa.CheckConstraint(
            "metric_inconsistent_class BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_inconsistent_class"
        ),
        sa.CheckConstraint("metric_max_iou BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_max_iou"),
        sa.CheckConstraint(
            "metric_missing_or_broken_track BETWEEN 0.0 AND 1.0",
            name="project_analytics_annotation_mtc_missing_or_broken_track",
        ),
        sa.CheckConstraint(
            "metric_polygon_similarity BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_polygon_similarity"
        ),
        sa.CheckConstraint("metric_random BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_random"),
        sa.CheckConstraint("metric_red BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_red"),
        sa.CheckConstraint(
            "metric_shape_outlier BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_shape_outlier"
        ),
        sa.CheckConstraint("metric_sharpness BETWEEN 0.0 AND 1.0", name="project_analytics_annotation_mtc_sharpness"),
        sa.CheckConstraint("metric_width >= 0", name="project_analytics_annotation_mtc_width"),
        sa.ForeignKeyConstraint(
            ["project_hash", "annotation_user_id"],
            ["project_collaborator.project_hash", "project_collaborator.user_id"],
            name="fk_project_analytics_annotation_user_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame"],
            ["project_data_units.project_hash", "project_data_units.du_hash", "project_data_units.frame"],
            name="fk_project_analytics_annotation",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame", "annotation_hash"),
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_annotation_quality",
        "project_analytics_annotation",
        ["project_hash", "metric_annotation_quality"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_area",
        "project_analytics_annotation",
        ["project_hash", "metric_area"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_area_relative",
        "project_analytics_annotation",
        ["project_hash", "metric_area_relative"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_aspect_ratio",
        "project_analytics_annotation",
        ["project_hash", "metric_aspect_ratio"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_blue",
        "project_analytics_annotation",
        ["project_hash", "metric_blue"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_border_relative",
        "project_analytics_annotation",
        ["project_hash", "metric_border_relative"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_brightness",
        "project_analytics_annotation",
        ["project_hash", "metric_brightness"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_confidence",
        "project_analytics_annotation",
        ["project_hash", "metric_confidence"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_contrast",
        "project_analytics_annotation",
        ["project_hash", "metric_contrast"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_green",
        "project_analytics_annotation",
        ["project_hash", "metric_green"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_height",
        "project_analytics_annotation",
        ["project_hash", "metric_height"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_inconsistent_class",
        "project_analytics_annotation",
        ["project_hash", "metric_inconsistent_class"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_max_iou",
        "project_analytics_annotation",
        ["project_hash", "metric_max_iou"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_missing_or_broken_track",
        "project_analytics_annotation",
        ["project_hash", "metric_missing_or_broken_track"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_polygon_similarity",
        "project_analytics_annotation",
        ["project_hash", "metric_polygon_similarity"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_random",
        "project_analytics_annotation",
        ["project_hash", "metric_random"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_red",
        "project_analytics_annotation",
        ["project_hash", "metric_red"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_shape_outlier",
        "project_analytics_annotation",
        ["project_hash", "metric_shape_outlier"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_sharpness",
        "project_analytics_annotation",
        ["project_hash", "metric_sharpness"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_ph_mtc_width",
        "project_analytics_annotation",
        ["project_hash", "metric_width"],
        unique=False,
    )
    op.create_table(
        "project_analytics_data",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("metric_width", sa.INTEGER(), nullable=True),
        sa.Column("metric_height", sa.INTEGER(), nullable=True),
        sa.Column("metric_area", sa.INTEGER(), nullable=True),
        sa.Column("metric_aspect_ratio", sa.REAL(), nullable=True),
        sa.Column("metric_brightness", sa.REAL(), nullable=True),
        sa.Column("metric_contrast", sa.REAL(), nullable=True),
        sa.Column("metric_sharpness", sa.REAL(), nullable=True),
        sa.Column("metric_red", sa.REAL(), nullable=True),
        sa.Column("metric_green", sa.REAL(), nullable=True),
        sa.Column("metric_blue", sa.REAL(), nullable=True),
        sa.Column("metric_random", sa.REAL(), nullable=True),
        sa.Column("metric_object_count", sa.INTEGER(), nullable=True),
        sa.Column("metric_object_density", sa.REAL(), nullable=True),
        sa.Column("metric_image_difficulty", sa.REAL(), nullable=True),
        sa.Column("metric_image_uniqueness", sa.REAL(), nullable=True),
        sa.Column("metric_custom0", sa.REAL(), nullable=True),
        sa.Column("metric_custom1", sa.REAL(), nullable=True),
        sa.Column("metric_custom2", sa.REAL(), nullable=True),
        sa.Column("metric_custom3", sa.REAL(), nullable=True),
        sa.CheckConstraint("frame >= 0", name="project_analytics_data_frame"),
        sa.CheckConstraint("metric_area >= 0", name="project_analytics_data_mtc_area"),
        sa.CheckConstraint("metric_aspect_ratio >= 0.0", name="project_analytics_data_mtc_aspect_ratio"),
        sa.CheckConstraint("metric_blue BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_blue"),
        sa.CheckConstraint("metric_brightness BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_brightness"),
        sa.CheckConstraint("metric_contrast BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_contrast"),
        sa.CheckConstraint("metric_green BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_green"),
        sa.CheckConstraint("metric_height >= 0", name="project_analytics_data_mtc_height"),
        sa.CheckConstraint(
            "metric_image_difficulty BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_image_difficulty"
        ),
        sa.CheckConstraint(
            "metric_image_uniqueness BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_image_uniqueness"
        ),
        sa.CheckConstraint("metric_object_count >= 0", name="project_analytics_data_mtc_object_count"),
        sa.CheckConstraint(
            "metric_object_density BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_object_density"
        ),
        sa.CheckConstraint("metric_random BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_random"),
        sa.CheckConstraint("metric_red BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_red"),
        sa.CheckConstraint("metric_sharpness BETWEEN 0.0 AND 1.0", name="project_analytics_data_mtc_sharpness"),
        sa.CheckConstraint("metric_width >= 0", name="project_analytics_data_mtc_width"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame"],
            ["project_data_units.project_hash", "project_data_units.du_hash", "project_data_units.frame"],
            name="fk_project_analytics_data",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame"),
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_area", "project_analytics_data", ["project_hash", "metric_area"], unique=False
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_aspect_ratio",
        "project_analytics_data",
        ["project_hash", "metric_aspect_ratio"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_blue", "project_analytics_data", ["project_hash", "metric_blue"], unique=False
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_brightness",
        "project_analytics_data",
        ["project_hash", "metric_brightness"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_contrast",
        "project_analytics_data",
        ["project_hash", "metric_contrast"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_green",
        "project_analytics_data",
        ["project_hash", "metric_green"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_height",
        "project_analytics_data",
        ["project_hash", "metric_height"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_image_difficulty",
        "project_analytics_data",
        ["project_hash", "metric_image_difficulty"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_image_uniqueness",
        "project_analytics_data",
        ["project_hash", "metric_image_uniqueness"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_object_count",
        "project_analytics_data",
        ["project_hash", "metric_object_count"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_object_density",
        "project_analytics_data",
        ["project_hash", "metric_object_density"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_random",
        "project_analytics_data",
        ["project_hash", "metric_random"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_red", "project_analytics_data", ["project_hash", "metric_red"], unique=False
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_sharpness",
        "project_analytics_data",
        ["project_hash", "metric_sharpness"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_ph_mtc_width",
        "project_analytics_data",
        ["project_hash", "metric_width"],
        unique=False,
    )
    op.create_table(
        "prediction_analytics_fn",
        sa.Column("prediction_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("iou_threshold", sa.REAL(), nullable=False),
        sa.Column("feature_hash", Char8(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="prediction_analytics_fn_frame"),
        sa.CheckConstraint(
            "iou_threshold BETWEEN 0.0 AND 1.0 OR iou_threshold = -1.0", name="prediction_analytics_fn_iou_threshold"
        ),
        sa.ForeignKeyConstraint(
            ["prediction_hash", "project_hash"],
            ["prediction.prediction_hash", "prediction.project_hash"],
            name="fk_prediction_analytics_fn_project",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame", "annotation_hash"],
            [
                "project_analytics_annotation.project_hash",
                "project_analytics_annotation.du_hash",
                "project_analytics_annotation.frame",
                "project_analytics_annotation.annotation_hash",
            ],
            name="fk_prediction_analytics_fn",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("prediction_hash", "du_hash", "frame", "annotation_hash", "feature_hash"),
    )
    op.create_index(
        "fk_prediction_analytics_fn_feature_hash",
        "prediction_analytics_fn",
        ["prediction_hash", "feature_hash"],
        unique=False,
    )
    op.create_table(
        "project_analytics_annotation_derived",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("distance_metric", sa.SMALLINT(), nullable=False),
        sa.Column("distance_index", sa.SMALLINT(), nullable=False),
        sa.Column("similarity", sa.REAL(), nullable=True),
        sa.Column("dep_du_hash", GUID(), nullable=False),
        sa.Column("dep_frame", sa.Integer(), nullable=False),
        sa.Column("dep_annotation_hash", Char8(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="project_analytics_annotation_derived_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame", "annotation_hash"],
            [
                "project_analytics_annotation.project_hash",
                "project_analytics_annotation.du_hash",
                "project_analytics_annotation.frame",
                "project_analytics_annotation.annotation_hash",
            ],
            name="fk_project_analytics_annotation_derived",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "project_hash", "du_hash", "frame", "annotation_hash", "distance_metric", "distance_index"
        ),
    )
    op.create_table(
        "project_analytics_annotation_extra",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("embedding_clip", PGVector(512), nullable=True),
        sa.Column("embedding_hu", PGVector(7), nullable=True),
        sa.Column("metric_metadata", StrDict(text_type=sa.Text()), nullable=True),
        sa.CheckConstraint("frame >= 0", name="project_analytics_annotation_extra_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame", "annotation_hash"],
            [
                "project_analytics_annotation.project_hash",
                "project_analytics_annotation.du_hash",
                "project_analytics_annotation.frame",
                "project_analytics_annotation.annotation_hash",
            ],
            name="fk_project_analytics_annotation_extra",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame", "annotation_hash"),
    )
    op.create_table(
        "project_analytics_annotation_reduced",
        sa.Column("reduction_hash", GUID(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("x", sa.REAL(), nullable=False),
        sa.Column("y", sa.REAL(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="project_analytics_annotation_reduced_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame", "annotation_hash"],
            [
                "project_analytics_annotation.project_hash",
                "project_analytics_annotation.du_hash",
                "project_analytics_annotation.frame",
                "project_analytics_annotation.annotation_hash",
            ],
            name="fk_project_analytics_annotation_reduced",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["reduction_hash"],
            ["project_embedding_reduction.reduction_hash"],
            name="fk_project_analytics_annotation_reduced_reduction",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("reduction_hash", "project_hash", "du_hash", "frame", "annotation_hash"),
    )
    op.create_index(
        "ix_project_analytics_annotation_reduced_x",
        "project_analytics_annotation_reduced",
        ["reduction_hash", "project_hash", "x", "y"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_annotation_reduced_y",
        "project_analytics_annotation_reduced",
        ["reduction_hash", "project_hash", "y", "x"],
        unique=False,
    )
    op.create_table(
        "project_analytics_data_derived",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("distance_metric", sa.SMALLINT(), nullable=False),
        sa.Column("distance_index", sa.SMALLINT(), nullable=False),
        sa.Column("similarity", sa.REAL(), nullable=True),
        sa.Column("dep_du_hash", GUID(), nullable=False),
        sa.Column("dep_frame", sa.Integer(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="project_analytics_data_derived_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame"],
            ["project_analytics_data.project_hash", "project_analytics_data.du_hash", "project_analytics_data.frame"],
            name="fk_project_analytics_data_derived",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame", "distance_metric", "distance_index"),
    )
    op.create_table(
        "project_analytics_data_extra",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("embedding_clip", PGVector(512), nullable=True),
        sa.Column("metric_metadata", StrDict(text_type=sa.Text()), nullable=True),
        sa.CheckConstraint("frame >= 0", name="project_analytics_data_extra_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame"],
            ["project_analytics_data.project_hash", "project_analytics_data.du_hash", "project_analytics_data.frame"],
            name="fk_project_analytics_data_extra",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame"),
    )
    op.create_table(
        "project_analytics_data_reduced",
        sa.Column("reduction_hash", GUID(), nullable=False),
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("x", sa.REAL(), nullable=False),
        sa.Column("y", sa.REAL(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="project_analytics_data_reduced_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame"],
            ["project_analytics_data.project_hash", "project_analytics_data.du_hash", "project_analytics_data.frame"],
            name="fk_project_analytics_data_reduced",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["reduction_hash"],
            ["project_embedding_reduction.reduction_hash"],
            name="fk_project_analytics_data_reduced_reduction",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("reduction_hash", "project_hash", "du_hash", "frame"),
    )
    op.create_index(
        "ix_project_analytics_data_reduced_x",
        "project_analytics_data_reduced",
        ["reduction_hash", "project_hash", "x", "y"],
        unique=False,
    )
    op.create_index(
        "ix_project_analytics_data_reduced_y",
        "project_analytics_data_reduced",
        ["reduction_hash", "project_hash", "y", "x"],
        unique=False,
    )
    op.create_table(
        "project_tagged_annotation",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("annotation_hash", Char8(), nullable=False),
        sa.Column("tag_hash", GUID(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="project_tagged_annotation_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame", "annotation_hash"],
            [
                "project_analytics_annotation.project_hash",
                "project_analytics_annotation.du_hash",
                "project_analytics_annotation.frame",
                "project_analytics_annotation.annotation_hash",
            ],
            name="fk_project_tagged_annotation",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_hash"],
            ["project_tags.tag_hash"],
            name="fk_project_tagged_annotation_tag",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame", "annotation_hash", "tag_hash"),
    )
    op.create_table(
        "project_tagged_data",
        sa.Column("project_hash", GUID(), nullable=False),
        sa.Column("du_hash", GUID(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("tag_hash", GUID(), nullable=False),
        sa.CheckConstraint("frame >= 0", name="project_tagged_data_frame"),
        sa.ForeignKeyConstraint(
            ["project_hash", "du_hash", "frame"],
            ["project_analytics_data.project_hash", "project_analytics_data.du_hash", "project_analytics_data.frame"],
            name="fk_project_tagged_data",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_hash"],
            ["project_tags.tag_hash"],
            name="fk_project_tagged_data_tag",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("project_hash", "du_hash", "frame", "tag_hash"),
    )
    # ### end Alembic commands ###
    bind = op.get_bind()
    if bind.engine.name == "sqlite":
        migrate_sqlite_database_to_new_schema()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("project_tagged_data")
    op.drop_table("project_tagged_annotation")
    op.drop_index("project_prediction_unmatched_feature_hash_index", table_name="project_prediction_analytics_fn")
    op.drop_table("project_prediction_analytics_fn")
    op.drop_index("project_analytics_data_reduced_y", table_name="project_analytics_data_reduced")
    op.drop_index("project_analytics_data_reduced_x", table_name="project_analytics_data_reduced")
    op.drop_table("project_analytics_data_reduced")
    op.drop_table("project_analytics_data_extra")
    op.drop_index("project_analytics_annotation_reduced_y", table_name="project_analytics_annotation_reduced")
    op.drop_index("project_analytics_annotation_reduced_x", table_name="project_analytics_annotation_reduced")
    op.drop_table("project_analytics_annotation_reduced")
    op.drop_table("project_analytics_annotation_extra")
    op.drop_table("project_prediction_data_units")
    op.drop_index("project_analytics_prediction_reduced_y", table_name="project_prediction_analytics_reduced")
    op.drop_index("project_analytics_prediction_reduced_x", table_name="project_prediction_analytics_reduced")
    op.drop_table("project_prediction_analytics_reduced")
    op.drop_table("project_prediction_analytics_extra")
    op.drop_index("data_ph_metric_width_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_sharpness_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_red_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_random_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_object_density_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_object_count_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_image_uniqueness_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_image_difficulty_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_height_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_green_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_contrast_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_brightness_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_blue_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_aspect_ratio_index", table_name="project_analytics_data")
    op.drop_index("data_ph_metric_area_index", table_name="project_analytics_data")
    op.drop_table("project_analytics_data")
    op.drop_index("annotate_ph_metric_width_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_sharpness_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_red_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_random_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_missing_or_broken_track_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_max_iou_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_label_shape_outlier_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_label_poly_similarity_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_inconsistent_class_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_height_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_green_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_contrast_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_confidence_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_brightness_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_border_relative_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_blue_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_aspect_ratio_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_area_relative_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_area_index", table_name="project_analytics_annotation")
    op.drop_index("annotate_ph_metric_annotation_quality_index", table_name="project_analytics_annotation")
    op.drop_table("project_analytics_annotation")
    op.drop_table("project_prediction_data")
    op.drop_index("project_prediction_feature_confidence_index", table_name="project_prediction_analytics")
    op.drop_index("project_prediction_confidence_index", table_name="project_prediction_analytics")
    op.drop_table("project_prediction_analytics")
    op.drop_table("project_data_units")
    op.drop_table("project_tags")
    op.drop_index("project_prediction_project_uq", table_name="project_prediction")
    op.drop_table("project_prediction")
    op.drop_table("project_import")
    op.drop_index("project_embedding_reduction_ph_idx", table_name="project_embedding_reduction")
    op.drop_table("project_embedding_reduction")
    op.drop_table("project_embedding_index")
    op.drop_table("project_data")
    op.drop_table("project_collaborator")
    op.drop_table("project")
    # ### end Alembic commands ###
    pass


def _sqlite_migrate(from_table: str, to_table: str, rename: Dict[str, str], transform: Dict[str, Callable]) -> None:
    results = op.get_bind().execute(f"SELECT * FROM {from_table}").all()
    results_dict = [dict(r) for r in results]
    print(f"{from_table}")


def migrate_sqlite_database_to_new_schema():
    # Migrate str -> int enum.
    _annotation_type_migrate_mapping = [
        ("CLASSIFICATION", 0),
        ("BOUNDING_BOX", 1),
        ("ROT_BOUNDING_BOX", 2),
        ("POINT", 3),
        ("POLYLINE", 4),
        ("POLYGON", 5),
        ("SKELETON", 6),
        ("BITMASK", 7),
    ]

    def upgrade_annotation_types(table: str) -> None:
        with op.batch_alter_table(table) as bop:
            bop.alter_column(
                "annotation_type",
                nullable=True,
                type_=sa.VARCHAR(),
                existing_type=sa.Enum(
                    "CLASSIFICATION",
                    "BOUNDING_BOX",
                    "ROT_BOUNDING_BOX",
                    "POINT",
                    "POLYLINE",
                    "POLYGON",
                    "SKELETON",
                    "BITMASK",
                    name="annotationtype",
                ),
            )
        for enum_str, enum_int in _annotation_type_migrate_mapping:
            op.execute(
                f"""
                UPDATE {table}
                SET annotation_type = '{enum_int}'
                WHERE annotation_type = '{enum_str}'
                """
            )
        bind = op.get_bind()
        with op.batch_alter_table(table) as bop:
            bop.alter_column(
                "annotation_type",
                nullable=False,
                type_=sa.Integer(),
                existing_type=sa.VARCHAR(),
            )

    upgrade_annotation_types("active_project_analytics_annotation")
    upgrade_annotation_types("active_project_prediction_analytics")
    upgrade_annotation_types("active_project_prediction_analytics_false_negatives")

    # Drop all tables & indices.
