name: Publish

on:
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: encord-active-${{ github.ref }}-publish
  cancel-in-progress: true

jobs:
  publish:
    name: Publish Encord.Active
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.AUTOMATION_BOT_ACCESS_TOKEN }}
          ref: main

      - name: Set additional Environment variables
        uses: ./.github/actions/write-env-vars
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - run: "npm install && npm run build"
        working-directory: ./src/encord_active/frontend

      - name: Setup root poetry environment
        uses: ./.github/actions/setup-root-poetry-environment

      - name: Poetry Version Bump
        run: "poetry version ${{ github.ref_name }}"

      - name: Module Version Bump
        run: 'sed -i "s/__version__ = \".*\"/__version__ = \"${{ github.ref_name }}\"/g" src/encord_active/__init__.py'

      - name: Version Bump commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Version bump to ${{ github.ref_name }}"
          push_options: --force

      - name: Build
        run: poetry build

      - name: Publish
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish

  docker:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/encord-active

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/encord-active:latest
          cache-to: type=inline
